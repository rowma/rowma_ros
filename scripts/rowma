#!/usr/bin/env python
import rospy
import socketio
from rosbridge_library.rosbridge_protocol import RosbridgeProtocol
import signal
import os

from lib import utils
from lib import socket_controller

rospy.init_node('rowma')
client_id_seed = 0
protocol = RosbridgeProtocol(client_id_seed)

sio = socketio.Client()

if os.environ.get('API_KEY'):
    nms = '/rowma_robot'
else:
    nms = '/rowma'

sc = socket_controller.SocketController('', [], sio, nms)

@sio.event(namespace=nms)
def connect():
    sc.connect()

@sio.on('robot_registered', namespace=nms)
def on_message(data):
    sc.robot_registered(data)

@sio.on('err', namespace=nms)
def on_message(data):
    print(data)
    # TODO: More smart exit
    os._exit(1)

@sio.on('rostopic', namespace=nms)
def on_message(data):
    print(data)
    sc.rostopic(data, protocol)

@sio.on('run_launch', namespace=nms)
def on_message(data):
    sc.run_launch(data)

@sio.on('run_rosrun', namespace=nms)
def on_message(data):
    sc.run_rosrun(data)

@sio.on('kill_rosnodes', namespace=nms)
def on_message(data):
    sc.kill_rosnodes(data)

@sio.event
def disconnect():
    print('disconnected from server')

def signal_handler(sig, frame):
    sc.signal_handler()

def outgoing_func(message):
    sc.outgoing_func(message)

protocol.outgoing = outgoing_func

server_url = os.environ.get('ROWMA_SERVER_URL') or 'https://rocky-peak-54058.herokuapp.com'
sio.connect(server_url)
signal.signal(signal.SIGINT, signal_handler)
signal.pause()
